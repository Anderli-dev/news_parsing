dist: bionic
language: python
python:
  - "3.10"

services:
  - docker

addons:
  apt:
    packages:
      - nodejs
      - npm

before_install:
  - docker --version
  - node --version
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

  - sudo apt-get update
  - sudo apt-get install -y awscli
  - aws --version

before_deploy:
  - aws ecr describe-repositories --region eu-central-1 --repository-names my-backend-repo || aws ecr create-repository --region eu-central-1 --repository-name my-backend-repo
  - aws ecr describe-repositories --region eu-central-1 --repository-names my-frontend-repo || aws ecr create-repository --region eu-central-1 --repository-name my-frontend-repo

script:
  - docker-compose -f docker-compose.yml up --build -d
  - docker ps
#  - docker-compose run backend python -m pytest
  - docker-compose exec frontend npm install --legacy-peer-deps
#  - timeout 10m docker-compose exec frontend npm test

after_success:
  - docker-compose -f docker-compose.yml build
  - docker tag backend $DOCKER_USERNAME/backend:$TRAVIS_BUILD_NUMBER
  - docker tag frontend $DOCKER_USERNAME/frontend:$TRAVIS_BUILD_NUMBER

  - docker push $DOCKER_USERNAME/backend:$TRAVIS_BUILD_NUMBER
  - docker push $DOCKER_USERNAME/frontend:$TRAVIS_BUILD_NUMBER

  - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com
  - docker tag backend $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/my-backend-repo:$TRAVIS_BUILD_NUMBER
  - docker tag frontend $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/my-frontend-repo:$TRAVIS_BUILD_NUMBER
  - docker push $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/my-backend-repo:$TRAVIS_BUILD_NUMBER
  - docker push $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/my-frontend-repo:$TRAVIS_BUILD_NUMBER
